import { a as createComponent, r as renderComponent, b as renderTemplate, m as maybeRenderHead } from '../../chunks/astro/server_Cqa-EqH9.mjs';
import { jsxs, jsx, Fragment } from 'react/jsx-runtime';
import { useQuery } from '@tanstack/react-query';
import { c as listFeaturedAiCoursesOptions } from '../../chunks/ai-course_ei-HsZ8o.mjs';
import { q as queryClient } from '../../chunks/query-client_BnT_580V.mjs';
import { useState, useEffect } from 'react';
import { b as getUrlParams, s as setUrlParams, d as deleteUrlParam } from '../../chunks/BaseLayout_DfQviQZ5.mjs';
import { A as AICourseCard } from '../../chunks/AICourseCard_JHGM-po4.mjs';
import { P as Pagination } from '../../chunks/Pagination_DCvqQ5el.mjs';
import { A as AITutorHeader, a as AICourseSearch, b as AITutorTallMessage } from '../../chunks/AITutorTallMessage_BGX738uL.mjs';
import { U as UpgradeAccountModal } from '../../chunks/UpgradeAccountModal_DhdxALHd.mjs';
import { Loader2, BookOpen } from 'lucide-react';
import { $ as $$SkeletonLayout } from '../../chunks/SkeletonLayout_CkmnKjD8.mjs';
import { A as AITutorLayout } from '../../chunks/AITutorLayout_D2lYDCfF.mjs';
export { renderers } from '../../renderers.mjs';

function AILoadingState(props) {
  const { title, subtitle } = props;
  return /* @__PURE__ */ jsxs("div", { className: "flex flex-grow w-full flex-col items-center justify-center gap-4 rounded-lg border border-gray-200 bg-white p-8", children: [
    /* @__PURE__ */ jsxs("div", { className: "relative", children: [
      /* @__PURE__ */ jsx(Loader2, { className: "size-12 animate-spin text-gray-300" }),
      /* @__PURE__ */ jsx("div", { className: "absolute inset-0 flex items-center justify-center", children: /* @__PURE__ */ jsx("div", { className: "size-4 rounded-full bg-white" }) })
    ] }),
    /* @__PURE__ */ jsxs("div", { className: "text-center", children: [
      /* @__PURE__ */ jsx("p", { className: "text-lg font-medium text-gray-900", children: title }),
      subtitle && /* @__PURE__ */ jsx("p", { className: "mt-1 text-sm text-gray-500", children: subtitle })
    ] })
  ] });
}

function AIFeaturedCoursesListing() {
  const [isInitialLoading, setIsInitialLoading] = useState(true);
  const [showUpgradePopup, setShowUpgradePopup] = useState(false);
  const [pageState, setPageState] = useState({
    perPage: "42",
    currPage: "1",
    query: ""
  });
  const { data: featuredAiCourses, isFetching: isFeaturedAiCoursesLoading } = useQuery(listFeaturedAiCoursesOptions(pageState), queryClient);
  useEffect(() => {
    setIsInitialLoading(false);
  }, [featuredAiCourses]);
  const courses = featuredAiCourses?.data ?? [];
  useEffect(() => {
    const queryParams = getUrlParams();
    setPageState({
      ...pageState,
      currPage: queryParams?.p || "1",
      query: queryParams?.q || ""
    });
  }, []);
  useEffect(() => {
    if (pageState?.currPage !== "1" || pageState?.query !== "") {
      setUrlParams({
        p: pageState?.currPage || "1",
        q: pageState?.query || ""
      });
    } else {
      deleteUrlParam("p");
      deleteUrlParam("q");
    }
  }, [pageState]);
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    showUpgradePopup && /* @__PURE__ */ jsx(UpgradeAccountModal, { onClose: () => setShowUpgradePopup(false) }),
    /* @__PURE__ */ jsx(
      AITutorHeader,
      {
        title: "Staff Picks",
        subtitle: "Explore our hand-picked courses generated by AI",
        onUpgradeClick: () => setShowUpgradePopup(true),
        children: /* @__PURE__ */ jsx(
          AICourseSearch,
          {
            value: pageState?.query || "",
            onChange: (value) => {
              setPageState({
                ...pageState,
                query: value,
                currPage: "1"
              });
            }
          }
        )
      }
    ),
    (isFeaturedAiCoursesLoading || isInitialLoading) && /* @__PURE__ */ jsx(
      AILoadingState,
      {
        title: "Loading featured courses",
        subtitle: "This may take a moment..."
      }
    ),
    !isFeaturedAiCoursesLoading && !isInitialLoading && courses.length > 0 && /* @__PURE__ */ jsxs("div", { className: "flex flex-col gap-2", children: [
      /* @__PURE__ */ jsx("div", { className: "grid grid-cols-1 gap-2 md:grid-cols-2 lg:grid-cols-3", children: courses.map((course) => /* @__PURE__ */ jsx(
        AICourseCard,
        {
          course,
          showActions: false,
          showProgress: false,
          variant: "column"
        },
        course._id
      )) }),
      /* @__PURE__ */ jsx(
        Pagination,
        {
          totalCount: featuredAiCourses?.totalCount || 0,
          totalPages: featuredAiCourses?.totalPages || 0,
          currPage: Number(featuredAiCourses?.currPage || 1),
          perPage: Number(featuredAiCourses?.perPage || 10),
          onPageChange: (page) => {
            setPageState({ ...pageState, currPage: String(page) });
          },
          className: "rounded-lg border border-gray-200 bg-white p-4"
        }
      )
    ] }),
    !isFeaturedAiCoursesLoading && !isInitialLoading && courses.length === 0 && /* @__PURE__ */ jsx(
      AITutorTallMessage,
      {
        title: "No featured courses",
        subtitle: "There are no featured courses available at the moment.",
        icon: BookOpen,
        buttonText: "Browse all courses",
        onButtonClick: () => {
          window.location.href = "/ai";
        }
      }
    )
  ] });
}

const $$StaffPicks = createComponent(($$result, $$props, $$slots) => {
  const ogImage = "https://roadmap.sh/og-images/ai-tutor.png";
  return renderTemplate`${renderComponent($$result, "SkeletonLayout", $$SkeletonLayout, { "title": "Roadmap AI", "noIndex": true, "ogImageUrl": ogImage, "description": "Learn anything with AI Tutor. Pick a topic, choose a difficulty level and the AI will guide you through the learning process." }, { "default": ($$result2) => renderTemplate` ${renderComponent($$result2, "AITutorLayout", AITutorLayout, { "activeTab": "staff-picks", "client:load": true, "client:component-hydration": "load", "client:component-path": "/workspace/src/components/AITutor/AITutorLayout", "client:component-export": "AITutorLayout" }, { "default": ($$result3) => renderTemplate` ${maybeRenderHead()}<div class="mx-auto flex w-full max-w-6xl flex-grow flex-col p-2"> ${renderComponent($$result3, "AIFeaturedCoursesListing", AIFeaturedCoursesListing, { "client:load": true, "client:component-hydration": "load", "client:component-path": "/workspace/src/components/AITutor/AIFeaturedCoursesListing", "client:component-export": "AIFeaturedCoursesListing" })} </div> ` })} ` })}`;
}, "/workspace/src/pages/ai/staff-picks.astro", void 0);

const $$file = "/workspace/src/pages/ai/staff-picks.astro";
const $$url = "/ai/staff-picks";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$StaffPicks,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
