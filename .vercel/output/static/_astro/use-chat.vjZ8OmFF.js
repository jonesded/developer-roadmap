import{r as n}from"./index.Z3BHPS3u.js";import{r as k}from"./jwt.1xGNZsvU.js";import{r as H}from"./chat.C-0TRz4N.js";import{a as d}from"./markdown.CL3gtrVM.js";import{r as g}from"./index.BlPpvBlM.js";function R(h){const{endpoint:l,initialMessages:f,onError:c,data:w={},onFinish:p}=h,t=n.useRef(null),[S,a]=n.useState(f||[]),[y,u]=n.useState(null),[b,r]=n.useState("idle"),C=n.useCallback(async s=>{try{r("loading"),t.current?.abort(),t.current=new AbortController;const o=await fetch(l,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({messages:s,...w}),signal:t.current?.signal,credentials:"include"});if(!o.ok){const e=await o.json();throw r("error"),a([...s].slice(0,s.length-1)),e.status===401&&(k(),window.location.reload()),new Error(e?.message||"Something went wrong")}const m=o.body;if(!m)throw r("error"),a([...s].slice(0,s.length-1)),new Error("Something went wrong");await H(m,{onMessage:async e=>{const i=await d(e);g.flushSync(()=>{r("streaming"),u(i)})},onMessageEnd:async e=>{const i=await d(e);g.flushSync(()=>{u(null),r("ready"),a(E=>[...E,{role:"assistant",content:e,html:i}])})}}),r("idle"),t.current=null,p?.()}catch(o){if(t.current?.signal.aborted)return;c?.(o),r("error")}},[l,c]),M=n.useCallback(()=>{t.current&&(t.current.abort(),t.current=null)},[]);return{messages:S,setMessages:a,sendMessages:C,status:b,streamedMessageHtml:y,stop:M}}export{R as u};
